services:
    bot:
        container_name: mic-dining-bot
        restart: unless-stopped
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            - NODE_ENV=production
    postgres:
        container_name: mic-dining-postgres
        image: postgres:latest
        restart: unless-stopped
        environment:
            - POSTGRES_USER=mic-dining
            - POSTGRES_PASSWORD=superhardpass
            - POSTGRES_DB=mic-dining
        volumes:
            - postgres_data_v2:/var/lib/postgresql/data
    redis:
        container_name: mic-dining-redis
        image: redis:latest
        command: ["redis-server", "--maxmemory-policy", "noeviction"]
        restart: unless-stopped
        volumes:
            - redis_data:/data
volumes:
    postgres_data_v2:
    redis_data:

networks:
    default: {}
